"use strict";
/*
Copyright 2018 - 2022 The Alephium Authors
This file is part of the alephium project.

The library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

The library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the library. If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.subscribeToTxStatus = exports.TxStatusSubscription = void 0;
const __1 = require("..");
const utils_1 = require("../utils");
class TxStatusSubscription extends utils_1.Subscription {
    constructor(options, txId, fromGroup, toGroup, confirmations) {
        super(options);
        this.txId = txId;
        this.fromGroup = fromGroup;
        this.toGroup = toGroup;
        this.confirmations = confirmations ?? 1;
        this.startPolling();
    }
    async polling() {
        try {
            const txStatus = await __1.web3.getCurrentNodeProvider().transactions.getTransactionsStatus({
                txId: this.txId,
                fromGroup: this.fromGroup,
                toGroup: this.toGroup
            });
            await this.messageCallback(txStatus);
            if (txStatus.type === 'Confirmed' && txStatus.chainConfirmations >= this.confirmations) {
                this.unsubscribe();
            }
        }
        catch (err) {
            await this.errorCallback(err, this);
        }
    }
}
exports.TxStatusSubscription = TxStatusSubscription;
function subscribeToTxStatus(options, txId, fromGroup, toGroup, confirmations) {
    return new TxStatusSubscription(options, txId, fromGroup, toGroup, confirmations);
}
exports.subscribeToTxStatus = subscribeToTxStatus;
