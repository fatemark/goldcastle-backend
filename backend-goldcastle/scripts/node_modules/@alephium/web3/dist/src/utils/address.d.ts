import { KeyType } from '../signer';
export declare enum AddressType {
    P2PKH = 0,
    P2MPKH = 1,
    P2SH = 2,
    P2C = 3
}
export declare function validateAddress(address: string): void;
export declare function groupOfAddress(address: string): number;
export declare function contractIdFromAddress(address: string): Uint8Array;
export declare function tokenIdFromAddress(address: string): Uint8Array;
export declare function groupOfPrivateKey(privateKey: string, keyType?: KeyType): number;
export declare function publicKeyFromPrivateKey(privateKey: string, _keyType?: KeyType): string;
export declare function addressFromPublicKey(publicKey: string, _keyType?: KeyType): string;
export declare function addressFromScript(script: Uint8Array): string;
export declare function addressFromContractId(contractId: string): string;
export declare function addressFromTokenId(tokenId: string): string;
export declare function contractIdFromTx(txId: string, outputIndex: number): string;
export declare function subContractId(parentContractId: string, pathInHex: string, group: number): string;
export declare function xorByte(intValue: number): number;
